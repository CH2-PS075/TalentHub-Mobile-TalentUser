// Generated by view binder compiler. Do not edit!
package com.ch2ps075.talenthub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ch2ps075.talenthub.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRowTalentBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView ivItemPhoto;

  @NonNull
  public final TextView tvItemCategory;

  @NonNull
  public final TextView tvItemLocation;

  @NonNull
  public final TextView tvItemName;

  private ItemRowTalentBinding(@NonNull MaterialCardView rootView, @NonNull ImageView ivItemPhoto,
      @NonNull TextView tvItemCategory, @NonNull TextView tvItemLocation,
      @NonNull TextView tvItemName) {
    this.rootView = rootView;
    this.ivItemPhoto = ivItemPhoto;
    this.tvItemCategory = tvItemCategory;
    this.tvItemLocation = tvItemLocation;
    this.tvItemName = tvItemName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRowTalentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRowTalentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_row_talent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRowTalentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_item_photo;
      ImageView ivItemPhoto = ViewBindings.findChildViewById(rootView, id);
      if (ivItemPhoto == null) {
        break missingId;
      }

      id = R.id.tv_item_category;
      TextView tvItemCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvItemCategory == null) {
        break missingId;
      }

      id = R.id.tv_item_location;
      TextView tvItemLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvItemLocation == null) {
        break missingId;
      }

      id = R.id.tv_item_name;
      TextView tvItemName = ViewBindings.findChildViewById(rootView, id);
      if (tvItemName == null) {
        break missingId;
      }

      return new ItemRowTalentBinding((MaterialCardView) rootView, ivItemPhoto, tvItemCategory,
          tvItemLocation, tvItemName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
