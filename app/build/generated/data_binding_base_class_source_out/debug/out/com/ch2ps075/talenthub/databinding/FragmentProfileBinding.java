// Generated by view binder compiler. Do not edit!
package com.ch2ps075.talenthub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ch2ps075.talenthub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout banner;

  @NonNull
  public final LinearLayout helpCenter;

  @NonNull
  public final ImageView ivHelpcenter;

  @NonNull
  public final ImageView ivLanguage;

  @NonNull
  public final ImageView ivPrivacyPolicy;

  @NonNull
  public final ImageView ivSettings;

  @NonNull
  public final ImageView ivTos;

  @NonNull
  public final LinearLayout language;

  @NonNull
  public final LinearLayout privacyPolicy;

  @NonNull
  public final LinearLayout settings;

  @NonNull
  public final LinearLayout termsOfServices;

  @NonNull
  public final TextView tvHelpcenter;

  @NonNull
  public final TextView tvLanguage;

  @NonNull
  public final TextView tvPrivacyPolicy;

  @NonNull
  public final TextView tvProfileEmail;

  @NonNull
  public final TextView tvProfileName;

  @NonNull
  public final TextView tvSettings;

  @NonNull
  public final TextView tvTos;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView, @NonNull FrameLayout banner,
      @NonNull LinearLayout helpCenter, @NonNull ImageView ivHelpcenter,
      @NonNull ImageView ivLanguage, @NonNull ImageView ivPrivacyPolicy,
      @NonNull ImageView ivSettings, @NonNull ImageView ivTos, @NonNull LinearLayout language,
      @NonNull LinearLayout privacyPolicy, @NonNull LinearLayout settings,
      @NonNull LinearLayout termsOfServices, @NonNull TextView tvHelpcenter,
      @NonNull TextView tvLanguage, @NonNull TextView tvPrivacyPolicy,
      @NonNull TextView tvProfileEmail, @NonNull TextView tvProfileName,
      @NonNull TextView tvSettings, @NonNull TextView tvTos) {
    this.rootView = rootView;
    this.banner = banner;
    this.helpCenter = helpCenter;
    this.ivHelpcenter = ivHelpcenter;
    this.ivLanguage = ivLanguage;
    this.ivPrivacyPolicy = ivPrivacyPolicy;
    this.ivSettings = ivSettings;
    this.ivTos = ivTos;
    this.language = language;
    this.privacyPolicy = privacyPolicy;
    this.settings = settings;
    this.termsOfServices = termsOfServices;
    this.tvHelpcenter = tvHelpcenter;
    this.tvLanguage = tvLanguage;
    this.tvPrivacyPolicy = tvPrivacyPolicy;
    this.tvProfileEmail = tvProfileEmail;
    this.tvProfileName = tvProfileName;
    this.tvSettings = tvSettings;
    this.tvTos = tvTos;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.banner;
      FrameLayout banner = ViewBindings.findChildViewById(rootView, id);
      if (banner == null) {
        break missingId;
      }

      id = R.id.help_center;
      LinearLayout helpCenter = ViewBindings.findChildViewById(rootView, id);
      if (helpCenter == null) {
        break missingId;
      }

      id = R.id.iv_helpcenter;
      ImageView ivHelpcenter = ViewBindings.findChildViewById(rootView, id);
      if (ivHelpcenter == null) {
        break missingId;
      }

      id = R.id.iv_language;
      ImageView ivLanguage = ViewBindings.findChildViewById(rootView, id);
      if (ivLanguage == null) {
        break missingId;
      }

      id = R.id.iv_privacy_policy;
      ImageView ivPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (ivPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.iv_settings;
      ImageView ivSettings = ViewBindings.findChildViewById(rootView, id);
      if (ivSettings == null) {
        break missingId;
      }

      id = R.id.iv_tos;
      ImageView ivTos = ViewBindings.findChildViewById(rootView, id);
      if (ivTos == null) {
        break missingId;
      }

      id = R.id.language;
      LinearLayout language = ViewBindings.findChildViewById(rootView, id);
      if (language == null) {
        break missingId;
      }

      id = R.id.privacy_policy;
      LinearLayout privacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (privacyPolicy == null) {
        break missingId;
      }

      id = R.id.settings;
      LinearLayout settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.terms_of_services;
      LinearLayout termsOfServices = ViewBindings.findChildViewById(rootView, id);
      if (termsOfServices == null) {
        break missingId;
      }

      id = R.id.tv_helpcenter;
      TextView tvHelpcenter = ViewBindings.findChildViewById(rootView, id);
      if (tvHelpcenter == null) {
        break missingId;
      }

      id = R.id.tv_language;
      TextView tvLanguage = ViewBindings.findChildViewById(rootView, id);
      if (tvLanguage == null) {
        break missingId;
      }

      id = R.id.tv_privacy_policy;
      TextView tvPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (tvPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.tv_profile_email;
      TextView tvProfileEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvProfileEmail == null) {
        break missingId;
      }

      id = R.id.tv_profile_name;
      TextView tvProfileName = ViewBindings.findChildViewById(rootView, id);
      if (tvProfileName == null) {
        break missingId;
      }

      id = R.id.tv_settings;
      TextView tvSettings = ViewBindings.findChildViewById(rootView, id);
      if (tvSettings == null) {
        break missingId;
      }

      id = R.id.tv_tos;
      TextView tvTos = ViewBindings.findChildViewById(rootView, id);
      if (tvTos == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, banner, helpCenter,
          ivHelpcenter, ivLanguage, ivPrivacyPolicy, ivSettings, ivTos, language, privacyPolicy,
          settings, termsOfServices, tvHelpcenter, tvLanguage, tvPrivacyPolicy, tvProfileEmail,
          tvProfileName, tvSettings, tvTos);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
