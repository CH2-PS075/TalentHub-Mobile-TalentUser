// Generated by view binder compiler. Do not edit!
package com.ch2ps075.talenthub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ch2ps075.talenthub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHelpCenterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final RecyclerView rvQuestion;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final Toolbar toolbarHc;

  private ActivityHelpCenterBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivBack,
      @NonNull RecyclerView rvQuestion, @NonNull ScrollView scrollView,
      @NonNull Toolbar toolbarHc) {
    this.rootView = rootView;
    this.ivBack = ivBack;
    this.rvQuestion = rvQuestion;
    this.scrollView = scrollView;
    this.toolbarHc = toolbarHc;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHelpCenterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHelpCenterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_help_center, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHelpCenterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.rv_question;
      RecyclerView rvQuestion = ViewBindings.findChildViewById(rootView, id);
      if (rvQuestion == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.toolbar_hc;
      Toolbar toolbarHc = ViewBindings.findChildViewById(rootView, id);
      if (toolbarHc == null) {
        break missingId;
      }

      return new ActivityHelpCenterBinding((ConstraintLayout) rootView, ivBack, rvQuestion,
          scrollView, toolbarHc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
